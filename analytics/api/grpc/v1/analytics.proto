// protoc --go_out=./pkg --go_opt=paths=source_relative --go-grpc_out=./pkg --go-grpc_opt=paths=source_relative ./api/grpc/v1/analytics.proto
syntax = "proto3";

package analytics.v1;

option go_package = "api/analytics/v1;v1";

service analytics {
    rpc GetUserRating(GetUserRatingRequest) returns (GetUserRatingResponse); 
    rpc GetUserRatingInCourse(GetUserRatingInCourseRequest) returns (GetUserRatingInCourseResponse);
    rpc GetUserProgressInCourse(GetUserProgressInCourseRequest) returns (GetUserProgressInCourseResponse);
}

message GetUserRatingRequest {
    int64 userID = 1;
}
message GetUserRatingResponse {
    string ratingID = 1;
    int64 score = 2;
    int64 position = 3;
    int64 lastUpdated = 4; // timestamp in unix
}

message GetUserRatingInCourseRequest {
    int64 userID = 1;
    string courseID = 2;
}
message GetUserRatingInCourseResponse {
    string ratingID = 1;
    int64 score = 2;
    int64 position = 3;
    int64 lastUpdated = 4; // timestamp in unix
}

message GetUserProgressInCourseRequest {
    int64 userID = 1;
    string courseID = 2;
}
message GetUserProgressInCourseResponse {
    string progressID = 1;
    int64 materialsCompleted = 2;
    int64 totalTasksCompleted = 3;
    int64 totalQuizzesCompleted = 4;
    int64 totalScore = 5;
    string completionRate = 6; // numeric/decimal type in string
    int64 lastUpdated = 7; // timestamp in unix
}