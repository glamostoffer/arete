// protoc --go_out=./pkg --go_opt=paths=source_relative --go-grpc_out=./pkg --go-grpc_opt=paths=source_relative ./api/grpc/v1/practice.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: api/grpc/v1/practice.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Quizz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CourseID    int64  `protobuf:"varint,2,opt,name=courseID,proto3" json:"courseID,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	IsFinished  bool   `protobuf:"varint,5,opt,name=isFinished,proto3" json:"isFinished,omitempty"`
	IsLocked    bool   `protobuf:"varint,6,opt,name=isLocked,proto3" json:"isLocked,omitempty"`
}

func (x *Quizz) Reset() {
	*x = Quizz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_practice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quizz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quizz) ProtoMessage() {}

func (x *Quizz) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_practice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quizz.ProtoReflect.Descriptor instead.
func (*Quizz) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_practice_proto_rawDescGZIP(), []int{0}
}

func (x *Quizz) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Quizz) GetCourseID() int64 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

func (x *Quizz) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Quizz) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Quizz) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

func (x *Quizz) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

type Question struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	QuizzID int64             `protobuf:"varint,2,opt,name=quizzID,proto3" json:"quizzID,omitempty"`
	Text    string            `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Options []*QuestionOption `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *Question) Reset() {
	*x = Question{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_practice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_practice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_practice_proto_rawDescGZIP(), []int{1}
}

func (x *Question) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Question) GetQuizzID() int64 {
	if x != nil {
		return x.QuizzID
	}
	return 0
}

func (x *Question) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Question) GetOptions() []*QuestionOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type QuestionOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *QuestionOption) Reset() {
	*x = QuestionOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_practice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionOption) ProtoMessage() {}

func (x *QuestionOption) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_practice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionOption.ProtoReflect.Descriptor instead.
func (*QuestionOption) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_practice_proto_rawDescGZIP(), []int{2}
}

func (x *QuestionOption) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuestionOption) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type GetCourseQuizzesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseID int64 `protobuf:"varint,1,opt,name=courseID,proto3" json:"courseID,omitempty"`
	UserID   int64 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Limit    int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int64 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetCourseQuizzesRequest) Reset() {
	*x = GetCourseQuizzesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_practice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseQuizzesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseQuizzesRequest) ProtoMessage() {}

func (x *GetCourseQuizzesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_practice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseQuizzesRequest.ProtoReflect.Descriptor instead.
func (*GetCourseQuizzesRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_practice_proto_rawDescGZIP(), []int{3}
}

func (x *GetCourseQuizzesRequest) GetCourseID() int64 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

func (x *GetCourseQuizzesRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetCourseQuizzesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetCourseQuizzesRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetCourseQuizzesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quizzes []*Quizz `protobuf:"bytes,1,rep,name=quizzes,proto3" json:"quizzes,omitempty"`
}

func (x *GetCourseQuizzesResponse) Reset() {
	*x = GetCourseQuizzesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_practice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseQuizzesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseQuizzesResponse) ProtoMessage() {}

func (x *GetCourseQuizzesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_practice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseQuizzesResponse.ProtoReflect.Descriptor instead.
func (*GetCourseQuizzesResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_practice_proto_rawDescGZIP(), []int{4}
}

func (x *GetCourseQuizzesResponse) GetQuizzes() []*Quizz {
	if x != nil {
		return x.Quizzes
	}
	return nil
}

type StartQuizzRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	QuizzID  int64 `protobuf:"varint,2,opt,name=quizzID,proto3" json:"quizzID,omitempty"`
	CourseID int64 `protobuf:"varint,3,opt,name=courseID,proto3" json:"courseID,omitempty"`
}

func (x *StartQuizzRequest) Reset() {
	*x = StartQuizzRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_practice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartQuizzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartQuizzRequest) ProtoMessage() {}

func (x *StartQuizzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_practice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartQuizzRequest.ProtoReflect.Descriptor instead.
func (*StartQuizzRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_practice_proto_rawDescGZIP(), []int{5}
}

func (x *StartQuizzRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *StartQuizzRequest) GetQuizzID() int64 {
	if x != nil {
		return x.QuizzID
	}
	return 0
}

func (x *StartQuizzRequest) GetCourseID() int64 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

type StartQuizzResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID      string    `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	TotalQuestions int64     `protobuf:"varint,2,opt,name=totalQuestions,proto3" json:"totalQuestions,omitempty"`
	FirstQuestion  *Question `protobuf:"bytes,3,opt,name=firstQuestion,proto3" json:"firstQuestion,omitempty"`
}

func (x *StartQuizzResponse) Reset() {
	*x = StartQuizzResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_practice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartQuizzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartQuizzResponse) ProtoMessage() {}

func (x *StartQuizzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_practice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartQuizzResponse.ProtoReflect.Descriptor instead.
func (*StartQuizzResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_practice_proto_rawDescGZIP(), []int{6}
}

func (x *StartQuizzResponse) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *StartQuizzResponse) GetTotalQuestions() int64 {
	if x != nil {
		return x.TotalQuestions
	}
	return 0
}

func (x *StartQuizzResponse) GetFirstQuestion() *Question {
	if x != nil {
		return x.FirstQuestion
	}
	return nil
}

type GetQuizzQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *GetQuizzQuestionRequest) Reset() {
	*x = GetQuizzQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_practice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuizzQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuizzQuestionRequest) ProtoMessage() {}

func (x *GetQuizzQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_practice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuizzQuestionRequest.ProtoReflect.Descriptor instead.
func (*GetQuizzQuestionRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_practice_proto_rawDescGZIP(), []int{7}
}

func (x *GetQuizzQuestionRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type GetQuizzQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question *Question `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *GetQuizzQuestionResponse) Reset() {
	*x = GetQuizzQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_practice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuizzQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuizzQuestionResponse) ProtoMessage() {}

func (x *GetQuizzQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_practice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuizzQuestionResponse.ProtoReflect.Descriptor instead.
func (*GetQuizzQuestionResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_practice_proto_rawDescGZIP(), []int{8}
}

func (x *GetQuizzQuestionResponse) GetQuestion() *Question {
	if x != nil {
		return x.Question
	}
	return nil
}

type SubmitQuizzQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionID int64  `protobuf:"varint,1,opt,name=questionID,proto3" json:"questionID,omitempty"`
	OptionID   int64  `protobuf:"varint,2,opt,name=optionID,proto3" json:"optionID,omitempty"`
	SessionID  string `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *SubmitQuizzQuestionRequest) Reset() {
	*x = SubmitQuizzQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_practice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitQuizzQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitQuizzQuestionRequest) ProtoMessage() {}

func (x *SubmitQuizzQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_practice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitQuizzQuestionRequest.ProtoReflect.Descriptor instead.
func (*SubmitQuizzQuestionRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_practice_proto_rawDescGZIP(), []int{9}
}

func (x *SubmitQuizzQuestionRequest) GetQuestionID() int64 {
	if x != nil {
		return x.QuestionID
	}
	return 0
}

func (x *SubmitQuizzQuestionRequest) GetOptionID() int64 {
	if x != nil {
		return x.OptionID
	}
	return 0
}

func (x *SubmitQuizzQuestionRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type SubmitQuizzQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCorrect   bool   `protobuf:"varint,1,opt,name=isCorrect,proto3" json:"isCorrect,omitempty"`
	Explanation string `protobuf:"bytes,2,opt,name=explanation,proto3" json:"explanation,omitempty"`
}

func (x *SubmitQuizzQuestionResponse) Reset() {
	*x = SubmitQuizzQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_practice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitQuizzQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitQuizzQuestionResponse) ProtoMessage() {}

func (x *SubmitQuizzQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_practice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitQuizzQuestionResponse.ProtoReflect.Descriptor instead.
func (*SubmitQuizzQuestionResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_practice_proto_rawDescGZIP(), []int{10}
}

func (x *SubmitQuizzQuestionResponse) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

func (x *SubmitQuizzQuestionResponse) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

type SubmitQuizzRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *SubmitQuizzRequest) Reset() {
	*x = SubmitQuizzRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_practice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitQuizzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitQuizzRequest) ProtoMessage() {}

func (x *SubmitQuizzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_practice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitQuizzRequest.ProtoReflect.Descriptor instead.
func (*SubmitQuizzRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_practice_proto_rawDescGZIP(), []int{11}
}

func (x *SubmitQuizzRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type SubmitQuizzResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RightAnswers int64 `protobuf:"varint,1,opt,name=rightAnswers,proto3" json:"rightAnswers,omitempty"`
	IsFinished   bool  `protobuf:"varint,2,opt,name=isFinished,proto3" json:"isFinished,omitempty"`
}

func (x *SubmitQuizzResponse) Reset() {
	*x = SubmitQuizzResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_v1_practice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitQuizzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitQuizzResponse) ProtoMessage() {}

func (x *SubmitQuizzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_v1_practice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitQuizzResponse.ProtoReflect.Descriptor instead.
func (*SubmitQuizzResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_v1_practice_proto_rawDescGZIP(), []int{12}
}

func (x *SubmitQuizzResponse) GetRightAnswers() int64 {
	if x != nil {
		return x.RightAnswers
	}
	return 0
}

func (x *SubmitQuizzResponse) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

var File_api_grpc_v1_practice_proto protoreflect.FileDescriptor

var file_api_grpc_v1_practice_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x22, 0xa7, 0x01, 0x0a, 0x05, 0x51, 0x75,
	0x69, 0x7a, 0x7a, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x22, 0x7f, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x35, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x34, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x7b, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x48, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x52, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x65,
	0x73, 0x22, 0x61, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x44, 0x22, 0x97, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75,
	0x69, 0x7a, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x69, 0x7a, 0x7a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x76, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x51, 0x75, 0x69, 0x7a, 0x7a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x5d,
	0x0a, 0x1b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x22, 0x59, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x32, 0xd7, 0x03, 0x0a,
	0x08, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x12, 0x24, 0x2e,
	0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x7a,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x69, 0x7a,
	0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x69, 0x7a,
	0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x69, 0x7a, 0x7a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e,
	0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x69, 0x7a, 0x7a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x13, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51,
	0x75, 0x69, 0x7a, 0x7a, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51, 0x75,
	0x69, 0x7a, 0x7a, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x14, 0x5a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_grpc_v1_practice_proto_rawDescOnce sync.Once
	file_api_grpc_v1_practice_proto_rawDescData = file_api_grpc_v1_practice_proto_rawDesc
)

func file_api_grpc_v1_practice_proto_rawDescGZIP() []byte {
	file_api_grpc_v1_practice_proto_rawDescOnce.Do(func() {
		file_api_grpc_v1_practice_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_grpc_v1_practice_proto_rawDescData)
	})
	return file_api_grpc_v1_practice_proto_rawDescData
}

var file_api_grpc_v1_practice_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_grpc_v1_practice_proto_goTypes = []any{
	(*Quizz)(nil),                       // 0: practice.v1.Quizz
	(*Question)(nil),                    // 1: practice.v1.Question
	(*QuestionOption)(nil),              // 2: practice.v1.QuestionOption
	(*GetCourseQuizzesRequest)(nil),     // 3: practice.v1.GetCourseQuizzesRequest
	(*GetCourseQuizzesResponse)(nil),    // 4: practice.v1.GetCourseQuizzesResponse
	(*StartQuizzRequest)(nil),           // 5: practice.v1.StartQuizzRequest
	(*StartQuizzResponse)(nil),          // 6: practice.v1.StartQuizzResponse
	(*GetQuizzQuestionRequest)(nil),     // 7: practice.v1.GetQuizzQuestionRequest
	(*GetQuizzQuestionResponse)(nil),    // 8: practice.v1.GetQuizzQuestionResponse
	(*SubmitQuizzQuestionRequest)(nil),  // 9: practice.v1.SubmitQuizzQuestionRequest
	(*SubmitQuizzQuestionResponse)(nil), // 10: practice.v1.SubmitQuizzQuestionResponse
	(*SubmitQuizzRequest)(nil),          // 11: practice.v1.SubmitQuizzRequest
	(*SubmitQuizzResponse)(nil),         // 12: practice.v1.SubmitQuizzResponse
}
var file_api_grpc_v1_practice_proto_depIdxs = []int32{
	2,  // 0: practice.v1.Question.options:type_name -> practice.v1.QuestionOption
	0,  // 1: practice.v1.GetCourseQuizzesResponse.quizzes:type_name -> practice.v1.Quizz
	1,  // 2: practice.v1.StartQuizzResponse.firstQuestion:type_name -> practice.v1.Question
	1,  // 3: practice.v1.GetQuizzQuestionResponse.question:type_name -> practice.v1.Question
	3,  // 4: practice.v1.Practice.GetCourseQuizzes:input_type -> practice.v1.GetCourseQuizzesRequest
	5,  // 5: practice.v1.Practice.StartQuizz:input_type -> practice.v1.StartQuizzRequest
	7,  // 6: practice.v1.Practice.GetQuizzQuestion:input_type -> practice.v1.GetQuizzQuestionRequest
	9,  // 7: practice.v1.Practice.SubmitQuizzQuestion:input_type -> practice.v1.SubmitQuizzQuestionRequest
	11, // 8: practice.v1.Practice.SubmitQuizz:input_type -> practice.v1.SubmitQuizzRequest
	4,  // 9: practice.v1.Practice.GetCourseQuizzes:output_type -> practice.v1.GetCourseQuizzesResponse
	6,  // 10: practice.v1.Practice.StartQuizz:output_type -> practice.v1.StartQuizzResponse
	8,  // 11: practice.v1.Practice.GetQuizzQuestion:output_type -> practice.v1.GetQuizzQuestionResponse
	10, // 12: practice.v1.Practice.SubmitQuizzQuestion:output_type -> practice.v1.SubmitQuizzQuestionResponse
	12, // 13: practice.v1.Practice.SubmitQuizz:output_type -> practice.v1.SubmitQuizzResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_grpc_v1_practice_proto_init() }
func file_api_grpc_v1_practice_proto_init() {
	if File_api_grpc_v1_practice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_grpc_v1_practice_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Quizz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_practice_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Question); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_practice_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*QuestionOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_practice_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetCourseQuizzesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_practice_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetCourseQuizzesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_practice_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*StartQuizzRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_practice_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*StartQuizzResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_practice_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuizzQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_practice_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuizzQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_practice_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitQuizzQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_practice_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitQuizzQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_practice_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitQuizzRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_v1_practice_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitQuizzResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_grpc_v1_practice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_grpc_v1_practice_proto_goTypes,
		DependencyIndexes: file_api_grpc_v1_practice_proto_depIdxs,
		MessageInfos:      file_api_grpc_v1_practice_proto_msgTypes,
	}.Build()
	File_api_grpc_v1_practice_proto = out.File
	file_api_grpc_v1_practice_proto_rawDesc = nil
	file_api_grpc_v1_practice_proto_goTypes = nil
	file_api_grpc_v1_practice_proto_depIdxs = nil
}
